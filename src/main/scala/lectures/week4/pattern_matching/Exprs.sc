import lectures.week4.pattern_matching._
import lectures.week4.pattern_matching.A_Number
import lectures.week4.pattern_matching.A_Product
import lectures.week4.pattern_matching.A_Sum
import lectures.week4.pattern_matching.A_Var
import lectures.week4.pattern_matching.ANumber
import lectures.week4.pattern_matching.ASum
import lectures.week4.pattern_matching.Number
import lectures.week4.pattern_matching.Sum

def eval(e: Expr): Int = e match {
   case Number(n) => n
   case Sum(e1, e2) => eval(e1) + eval(e2)
}
def show(e: Expr): String = e match {
   case Number(n) => n.toString
   case Sum(e1, e2) => "(" + show(e1) + " + " + show(e2) + ")"
}
def output(e: Expr): String = show(e) + " = " + eval(e)
// First run, with methods outside of base class
output(Number(4))
output(Sum(Number(1), Number(8)))
output(Sum(Number(1), Sum(Number(8), Number(23))))

// Now with eval, show and output as part of the Expr trait (now called Expr2)
ANumber(4)
ASum(ANumber(1), ANumber(8))
ASum(ANumber(1), ASum(ANumber(8), ANumber(23)))

// Now with variables

A_Sum(A_Var("x"), A_Number(8))
A_Product(A_Var("x"), A_Var("y"))
A_Product(A_Var("x"), A_Number(12))
A_Sum(A_Var("y"), A_Product(A_Var("x"), A_Number(12)))
A_Sum(A_Product(A_Var("x"), A_Number(12)), A_Var("y"))
A_Product(A_Var("y"), A_Sum(A_Var("x"), A_Number(12)))
A_Product(A_Sum(A_Var("x"), A_Number(12)), A_Var("y"))
































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































//A_Sum(A_Product(A_Number(2), A_Var("x")), A_Var("y"))
//A_Product(A_Sum(A_Number(2), A_Var("x")), A_Var("y"))