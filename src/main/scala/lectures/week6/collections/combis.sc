object combis {
  (1 to 10) map (x => (1 to 5) map (y => (x, y)))

  // Above returns Vector of Vectors

//  res0: scala.collection.immutable.IndexedSeq[scala.collection.immutable.IndexedSe
//    q[(Int, Int)]] = Vector(Vector((1,1), (1,2), (1,3), (1,4), (1,5)), Vector((2,1
//    ), (2,2), (2,3), (2,4), (2,5)), Vector((3,1), (3,2), (3,3), (3,4), (3,5)), Vec
//    tor((4,1), (4,2), (4,3), (4,4), (4,5)), Vector((5,1), (5,2), (5,3), (5,4), (5,
//    5)), Vector((6,1), (6,2), (6,3), (6,4), (6,5)), Vector((7,1), (7,2), (7,3), (7
//    ,4), (7,5)), Vector((8,1), (8,2), (8,3), (8,4), (8,5)), Vector((9,1), (9,2), (
//    9,3), (9,4), (9,5)), Vector((10,1), (10,2), (10,3), (10,4), (10,5)))

  // This version uses flatMap to reduce it to a single vector
  (1 to 10) flatMap (x => (1 to 5) map (y => (x, y)))

//  res1: scala.collection.immutable.IndexedSeq[(Int, Int)] = Vector((1,1), (1,2), (
//    1,3), (1,4), (1,5), (2,1), (2,2), (2,3), (2,4), (2,5), (3,1), (3,2), (3,3), (3
//    ,4), (3,5), (4,1), (4,2), (4,3), (4,4), (4,5), (5,1), (5,2), (5,3), (5,4), (5,
//    5), (6,1), (6,2), (6,3), (6,4), (6,5), (7,1), (7,2), (7,3), (7,4), (7,5), (8,1
//    ), (8,2), (8,3), (8,4), (8,5), (9,1), (9,2), (9,3), (9,4), (9,5), (10,1), (10,
//    2), (10,3), (10,4), (10,5))

}